name: CI/CD Pipeline with SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manual trigger

jobs:
  sonar:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:9.9-community  # Use a specific stable version of SonarQube
        options: >-
          --name sonarqube
          -p 9001:9000  # Map port 9001 on host to port 9000 on the container
        ports:
          - 9001:9000  # Expose the container port 9000 as host port 9001

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'  # or another distribution

      - name: Wait for SonarQube to be ready
        run: |
          # Wait for SonarQube to be up and running on port 9001
          for i in {1..60}; do  # Increased wait time from 30 to 60
            curl -s http://localhost:9001/api/system/ping && break || echo "Waiting for SonarQube to be ready..." && sleep 10
          done

      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonarscanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonarscanner.zip
          export PATH=$PWD/sonar-scanner-4.6.2.2472-linux/bin:$PATH

      - name: Run SonarQube analysis
        run: |
          sonar-scanner \
            -Dsonar.host.url=http://localhost:9001 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.projectKey=your_project_key

      - name: Stop SonarQube container
        run: |
          docker stop sonarqube
          docker rm sonarqube
