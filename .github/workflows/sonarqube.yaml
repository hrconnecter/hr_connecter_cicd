name: Run Selenium Tests with SonarQube in Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:  # manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        run: |
          echo "Building the project with Maven"
          mvn clean install # This will generate the build artifact (e.g., JAR/WAR)

  sonarqube-setup:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Run SonarQube container
        run: |
          echo "Starting SonarQube container"
          docker run -d --name sonarqube -p 9000:9000 sonarqube:latest

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to start"
          sleep 60  # Give SonarQube enough time to start up

      - name: Install SonarQube Scanner
        run: |
          echo "Installing SonarQube scanner"
          wget https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.6.2.2472/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip
          export PATH=$PWD/sonar-scanner-4.6.2.2472-linux/bin:$PATH

      - name: Run SonarQube scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Running SonarQube scan"
          sonar-scanner \
            -Dsonar.projectKey=my-java-app \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Stop and remove SonarQube container
        run: |
          echo "Stopping SonarQube container"
          docker stop sonarqube
          docker rm sonarqube

  selenium-testing:
    needs: sonarqube-setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Print Chrome version
        run: google-chrome --version
